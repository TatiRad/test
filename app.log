cc07e442-7986-4714-8fc2-ac2256690a90.json
Expecting value: line 1 column 1 (char 0)
297e4dc6-07d1-420d-a5ae-e4aff3aedc19.json
Extra data: line 1 column 6 (char 5)
ffe6b214-d543-40a8-8da3-deb0dc5bbd8c.json
Expecting value: line 1 column 1 (char 0)
3ade063d-d1b9-453f-85b4-dda7bfda4711.json
Extra data: line 1 column 2 (char 1)
3b4088ef-7521-4114-ac56-57c68632d431.json
Extra data: line 1 column 2 (char 1)
fb1a0854-9535-404d-9bdd-9ec0abb6cd6c.json
Expecting value: line 1 column 1 (char 0)
ba25151c-914f-4f47-909a-7a65a6339f34.json
Expecting value: line 1 column 1 (char 0)
1eba2aa1-2acf-460d-91e6-55a8c3e3b7a3.json
Extra data: line 1 column 2 (char 1)
e2d760c3-7e10-4464-ab22-7fda6b5e2562.json
Expecting value: line 1 column 1 (char 0)
f5656ff6-29e1-46b0-8d8a-ff77f9cc0953.json
Expecting value: line 1 column 1 (char 0)
29f0bfa7-bd51-4d45-93be-f6ead1ae0b96.json
Extra data: line 1 column 3 (char 2)
a95d845c-8d9e-4e07-8948-275167643a40.json
Expecting value: line 1 column 1 (char 0)
bb998113-bc02-4cd1-9410-d9ae94f53eb0.json
Expecting value: line 1 column 1 (char 0)
2e8ffd3c-dbda-42df-9901-b7a30869511a.json
Extra data: line 1 column 4 (char 3)
6b1984e5-4092-4279-9dce-bdaa831c7932.json
Extra data: line 1 column 2 (char 1)
c72d21cf-1152-4d8e-b649-e198149d5bbb.json
Expecting value: line 1 column 1 (char 0)
workout_created.schema
Expecting value: line 1 column 1 (char 0)
label_selected.schema
Expecting value: line 1 column 1 (char 0)
sleep_created.schema
Expecting value: line 1 column 1 (char 0)
cmarker_created.schema
Expecting value: line 1 column 1 (char 0)
cc07e442-7986-4714-8fc2-ac2256690a90.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
297e4dc6-07d1-420d-a5ae-e4aff3aedc19.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
ffe6b214-d543-40a8-8da3-deb0dc5bbd8c.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
3ade063d-d1b9-453f-85b4-dda7bfda4711.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
3b4088ef-7521-4114-ac56-57c68632d431.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
fb1a0854-9535-404d-9bdd-9ec0abb6cd6c.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
ba25151c-914f-4f47-909a-7a65a6339f34.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
1eba2aa1-2acf-460d-91e6-55a8c3e3b7a3.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
e2d760c3-7e10-4464-ab22-7fda6b5e2562.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
f5656ff6-29e1-46b0-8d8a-ff77f9cc0953.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
29f0bfa7-bd51-4d45-93be-f6ead1ae0b96.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
a95d845c-8d9e-4e07-8948-275167643a40.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
bb998113-bc02-4cd1-9410-d9ae94f53eb0.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
2e8ffd3c-dbda-42df-9901-b7a30869511a.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
6b1984e5-4092-4279-9dce-bdaa831c7932.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
c72d21cf-1152-4d8e-b649-e198149d5bbb.json
'workout_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'workout_created.schema'
cc07e442-7986-4714-8fc2-ac2256690a90.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
297e4dc6-07d1-420d-a5ae-e4aff3aedc19.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
ffe6b214-d543-40a8-8da3-deb0dc5bbd8c.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
3ade063d-d1b9-453f-85b4-dda7bfda4711.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
3b4088ef-7521-4114-ac56-57c68632d431.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
fb1a0854-9535-404d-9bdd-9ec0abb6cd6c.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
ba25151c-914f-4f47-909a-7a65a6339f34.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
1eba2aa1-2acf-460d-91e6-55a8c3e3b7a3.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
e2d760c3-7e10-4464-ab22-7fda6b5e2562.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
f5656ff6-29e1-46b0-8d8a-ff77f9cc0953.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
29f0bfa7-bd51-4d45-93be-f6ead1ae0b96.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
a95d845c-8d9e-4e07-8948-275167643a40.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
bb998113-bc02-4cd1-9410-d9ae94f53eb0.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
2e8ffd3c-dbda-42df-9901-b7a30869511a.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
6b1984e5-4092-4279-9dce-bdaa831c7932.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
c72d21cf-1152-4d8e-b649-e198149d5bbb.json
'label_selected.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'label_selected.schema'
cc07e442-7986-4714-8fc2-ac2256690a90.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
297e4dc6-07d1-420d-a5ae-e4aff3aedc19.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
ffe6b214-d543-40a8-8da3-deb0dc5bbd8c.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
3ade063d-d1b9-453f-85b4-dda7bfda4711.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
3b4088ef-7521-4114-ac56-57c68632d431.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
fb1a0854-9535-404d-9bdd-9ec0abb6cd6c.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
ba25151c-914f-4f47-909a-7a65a6339f34.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
1eba2aa1-2acf-460d-91e6-55a8c3e3b7a3.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
e2d760c3-7e10-4464-ab22-7fda6b5e2562.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
f5656ff6-29e1-46b0-8d8a-ff77f9cc0953.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
29f0bfa7-bd51-4d45-93be-f6ead1ae0b96.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
a95d845c-8d9e-4e07-8948-275167643a40.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
bb998113-bc02-4cd1-9410-d9ae94f53eb0.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
2e8ffd3c-dbda-42df-9901-b7a30869511a.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
6b1984e5-4092-4279-9dce-bdaa831c7932.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
c72d21cf-1152-4d8e-b649-e198149d5bbb.json
'sleep_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'sleep_created.schema'
cc07e442-7986-4714-8fc2-ac2256690a90.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
297e4dc6-07d1-420d-a5ae-e4aff3aedc19.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
ffe6b214-d543-40a8-8da3-deb0dc5bbd8c.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
3ade063d-d1b9-453f-85b4-dda7bfda4711.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
3b4088ef-7521-4114-ac56-57c68632d431.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
fb1a0854-9535-404d-9bdd-9ec0abb6cd6c.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
ba25151c-914f-4f47-909a-7a65a6339f34.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
1eba2aa1-2acf-460d-91e6-55a8c3e3b7a3.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
e2d760c3-7e10-4464-ab22-7fda6b5e2562.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
f5656ff6-29e1-46b0-8d8a-ff77f9cc0953.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
29f0bfa7-bd51-4d45-93be-f6ead1ae0b96.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
a95d845c-8d9e-4e07-8948-275167643a40.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
bb998113-bc02-4cd1-9410-d9ae94f53eb0.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
2e8ffd3c-dbda-42df-9901-b7a30869511a.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
6b1984e5-4092-4279-9dce-bdaa831c7932.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
c72d21cf-1152-4d8e-b649-e198149d5bbb.json
'cmarker_created.schema' is not of type 'object', 'boolean'

Failed validating 'type' in metaschema:
    {'$id': 'http://json-schema.org/draft-07/schema#',
     '$schema': 'http://json-schema.org/draft-07/schema#',
     'default': True,
     'definitions': {'nonNegativeInteger': {'minimum': 0,
                                            'type': 'integer'},
                     'nonNegativeIntegerDefault0': {'allOf': [{'$ref': '#/definitions/nonNegativeInteger'},
                                                              {'default': 0}]},
                     'schemaArray': {'items': {'$ref': '#'},
                                     'minItems': 1,
                                     'type': 'array'},
                     'simpleTypes': {'enum': ['array',
                                              'boolean',
                                              'integer',
                                              'null',
                                              'number',
                                              'object',
                                              'string']},
                     'stringArray': {'default': [],
                                     'items': {'type': 'string'},
                                     'type': 'array',
                                     'uniqueItems': True}},
     'properties': {'$comment': {'type': 'string'},
                    '$id': {'format': 'uri-reference', 'type': 'string'},
                    '$ref': {'format': 'uri-reference', 'type': 'string'},
                    '$schema': {'format': 'uri', 'type': 'string'},
                    'additionalItems': {'$ref': '#'},
                    'additionalProperties': {'$ref': '#'},
                    'allOf': {'$ref': '#/definitions/schemaArray'},
                    'anyOf': {'$ref': '#/definitions/schemaArray'},
                    'const': True,
                    'contains': {'$ref': '#'},
                    'contentEncoding': {'type': 'string'},
                    'contentMediaType': {'type': 'string'},
                    'default': True,
                    'definitions': {'additionalProperties': {'$ref': '#'},
                                    'default': {},
                                    'type': 'object'},
                    'dependencies': {'additionalProperties': {'anyOf': [{'$ref': '#'},
                                                                        {'$ref': '#/definitions/stringArray'}]},
                                     'type': 'object'},
                    'description': {'type': 'string'},
                    'else': {'$ref': '#'},
                    'enum': {'items': True, 'type': 'array'},
                    'examples': {'items': True, 'type': 'array'},
                    'exclusiveMaximum': {'type': 'number'},
                    'exclusiveMinimum': {'type': 'number'},
                    'format': {'type': 'string'},
                    'if': {'$ref': '#'},
                    'items': {'anyOf': [{'$ref': '#'},
                                        {'$ref': '#/definitions/schemaArray'}],
                              'default': True},
                    'maxItems': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxLength': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maxProperties': {'$ref': '#/definitions/nonNegativeInteger'},
                    'maximum': {'type': 'number'},
                    'minItems': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minLength': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minProperties': {'$ref': '#/definitions/nonNegativeIntegerDefault0'},
                    'minimum': {'type': 'number'},
                    'multipleOf': {'exclusiveMinimum': 0, 'type': 'number'},
                    'not': {'$ref': '#'},
                    'oneOf': {'$ref': '#/definitions/schemaArray'},
                    'pattern': {'format': 'regex', 'type': 'string'},
                    'patternProperties': {'additionalProperties': {'$ref': '#'},
                                          'default': {},
                                          'propertyNames': {'format': 'regex'},
                                          'type': 'object'},
                    'properties': {'additionalProperties': {'$ref': '#'},
                                   'default': {},
                                   'type': 'object'},
                    'propertyNames': {'$ref': '#'},
                    'readOnly': {'default': False, 'type': 'boolean'},
                    'required': {'$ref': '#/definitions/stringArray'},
                    'then': {'$ref': '#'},
                    'title': {'type': 'string'},
                    'type': {'anyOf': [{'$ref': '#/definitions/simpleTypes'},
                                       {'items': {'$ref': '#/definitions/simpleTypes'},
                                        'minItems': 1,
                                        'type': 'array',
                                        'uniqueItems': True}]},
                    'uniqueItems': {'default': False, 'type': 'boolean'}},
     'title': 'Core schema meta-schema',
     'type': ['object', 'boolean']}

On schema:
    'cmarker_created.schema'
